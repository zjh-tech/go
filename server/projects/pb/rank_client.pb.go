// Code generated by protoc-gen-go.
// source: rank_client.proto
// DO NOT EDIT!

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CRLogicMsgId int32

const (
	CRLogicMsgId_c2r_logic_min_msg_id    CRLogicMsgId = 0
	CRLogicMsgId_c2r_rank_verify_req_id  CRLogicMsgId = 1
	CRLogicMsgId_r2c_rank_verify_ack_id  CRLogicMsgId = 2
	CRLogicMsgId_c2r_tranfer_msg_id      CRLogicMsgId = 3
	CRLogicMsgId_r2c_tranfer_msg_id      CRLogicMsgId = 4
	CRLogicMsgId_c2r_update_rank_req_id  CRLogicMsgId = 5
	CRLogicMsgId_r2c_update_rank_ack_id  CRLogicMsgId = 6
	CRLogicMsgId_c2r_query_rank_req_id   CRLogicMsgId = 7
	CRLogicMsgId_r2c_query_rank_ack_id   CRLogicMsgId = 8
	CRLogicMsgId_c2r_clear_all_req_id    CRLogicMsgId = 9
	CRLogicMsgId_r2c_clear_all_ack_id    CRLogicMsgId = 10
	CRLogicMsgId_c2r_clear_player_req_id CRLogicMsgId = 11
	CRLogicMsgId_r2c_clear_player_ack_id CRLogicMsgId = 12
	CRLogicMsgId_c2ts_logic_max_msg_id   CRLogicMsgId = 65535
)

var CRLogicMsgId_name = map[int32]string{
	0:     "c2r_logic_min_msg_id",
	1:     "c2r_rank_verify_req_id",
	2:     "r2c_rank_verify_ack_id",
	3:     "c2r_tranfer_msg_id",
	4:     "r2c_tranfer_msg_id",
	5:     "c2r_update_rank_req_id",
	6:     "r2c_update_rank_ack_id",
	7:     "c2r_query_rank_req_id",
	8:     "r2c_query_rank_ack_id",
	9:     "c2r_clear_all_req_id",
	10:    "r2c_clear_all_ack_id",
	11:    "c2r_clear_player_req_id",
	12:    "r2c_clear_player_ack_id",
	65535: "c2ts_logic_max_msg_id",
}
var CRLogicMsgId_value = map[string]int32{
	"c2r_logic_min_msg_id":    0,
	"c2r_rank_verify_req_id":  1,
	"r2c_rank_verify_ack_id":  2,
	"c2r_tranfer_msg_id":      3,
	"r2c_tranfer_msg_id":      4,
	"c2r_update_rank_req_id":  5,
	"r2c_update_rank_ack_id":  6,
	"c2r_query_rank_req_id":   7,
	"r2c_query_rank_ack_id":   8,
	"c2r_clear_all_req_id":    9,
	"r2c_clear_all_ack_id":    10,
	"c2r_clear_player_req_id": 11,
	"r2c_clear_player_ack_id": 12,
	"c2ts_logic_max_msg_id":   65535,
}

func (x CRLogicMsgId) String() string {
	return proto.EnumName(CRLogicMsgId_name, int32(x))
}
func (CRLogicMsgId) EnumDescriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

type C2RRankVerifyReq struct {
	GatewayToken string `protobuf:"bytes,1,opt,name=gateway_token,json=gatewayToken" json:"gateway_token,omitempty"`
}

func (m *C2RRankVerifyReq) Reset()                    { *m = C2RRankVerifyReq{} }
func (m *C2RRankVerifyReq) String() string            { return proto.CompactTextString(m) }
func (*C2RRankVerifyReq) ProtoMessage()               {}
func (*C2RRankVerifyReq) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

type R2CRankVerifyAck struct {
}

func (m *R2CRankVerifyAck) Reset()                    { *m = R2CRankVerifyAck{} }
func (m *R2CRankVerifyAck) String() string            { return proto.CompactTextString(m) }
func (*R2CRankVerifyAck) ProtoMessage()               {}
func (*R2CRankVerifyAck) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{1} }

type C2RTranferMsg struct {
	Tid   uint32 `protobuf:"varint,1,opt,name=tid" json:"tid,omitempty"`
	Msgid uint32 `protobuf:"varint,2,opt,name=msgid" json:"msgid,omitempty"`
	Datas []byte `protobuf:"bytes,3,opt,name=datas,proto3" json:"datas,omitempty"`
	Cbid  uint64 `protobuf:"varint,4,opt,name=cbid" json:"cbid,omitempty"`
}

func (m *C2RTranferMsg) Reset()                    { *m = C2RTranferMsg{} }
func (m *C2RTranferMsg) String() string            { return proto.CompactTextString(m) }
func (*C2RTranferMsg) ProtoMessage()               {}
func (*C2RTranferMsg) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{2} }

type R2CTranferMsg struct {
	Tid   uint32 `protobuf:"varint,1,opt,name=tid" json:"tid,omitempty"`
	Msgid uint32 `protobuf:"varint,2,opt,name=msgid" json:"msgid,omitempty"`
	Datas []byte `protobuf:"bytes,3,opt,name=datas,proto3" json:"datas,omitempty"`
	Cbid  uint64 `protobuf:"varint,4,opt,name=cbid" json:"cbid,omitempty"`
}

func (m *R2CTranferMsg) Reset()                    { *m = R2CTranferMsg{} }
func (m *R2CTranferMsg) String() string            { return proto.CompactTextString(m) }
func (*R2CTranferMsg) ProtoMessage()               {}
func (*R2CTranferMsg) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{3} }

type RankItem struct {
	PlayerId    uint64 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	AttachDatas []byte `protobuf:"bytes,2,opt,name=attach_datas,json=attachDatas,proto3" json:"attach_datas,omitempty"`
	SortField1  int64  `protobuf:"varint,3,opt,name=sort_field1,json=sortField1" json:"sort_field1,omitempty"`
	SortField2  int64  `protobuf:"varint,4,opt,name=sort_field2,json=sortField2" json:"sort_field2,omitempty"`
	SortField3  int64  `protobuf:"varint,5,opt,name=sort_field3,json=sortField3" json:"sort_field3,omitempty"`
	SortField4  int64  `protobuf:"varint,6,opt,name=sort_field4,json=sortField4" json:"sort_field4,omitempty"`
	SortField5  int64  `protobuf:"varint,7,opt,name=sort_field5,json=sortField5" json:"sort_field5,omitempty"`
}

func (m *RankItem) Reset()                    { *m = RankItem{} }
func (m *RankItem) String() string            { return proto.CompactTextString(m) }
func (*RankItem) ProtoMessage()               {}
func (*RankItem) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{4} }

type C2RUpdateRankReq struct {
	RankInfo *RankItem `protobuf:"bytes,1,opt,name=rank_info,json=rankInfo" json:"rank_info,omitempty"`
}

func (m *C2RUpdateRankReq) Reset()                    { *m = C2RUpdateRankReq{} }
func (m *C2RUpdateRankReq) String() string            { return proto.CompactTextString(m) }
func (*C2RUpdateRankReq) ProtoMessage()               {}
func (*C2RUpdateRankReq) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{5} }

func (m *C2RUpdateRankReq) GetRankInfo() *RankItem {
	if m != nil {
		return m.RankInfo
	}
	return nil
}

type R2CUpdateRankAck struct {
	Tid       uint32 `protobuf:"varint,1,opt,name=tid" json:"tid,omitempty"`
	Playerid  uint64 `protobuf:"varint,2,opt,name=playerid" json:"playerid,omitempty"`
	Errorcode uint32 `protobuf:"varint,3,opt,name=errorcode" json:"errorcode,omitempty"`
}

func (m *R2CUpdateRankAck) Reset()                    { *m = R2CUpdateRankAck{} }
func (m *R2CUpdateRankAck) String() string            { return proto.CompactTextString(m) }
func (*R2CUpdateRankAck) ProtoMessage()               {}
func (*R2CUpdateRankAck) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{6} }

type C2RQueryRankReq struct {
	PlayerId uint64 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	Topn     uint32 `protobuf:"varint,2,opt,name=topn" json:"topn,omitempty"`
}

func (m *C2RQueryRankReq) Reset()                    { *m = C2RQueryRankReq{} }
func (m *C2RQueryRankReq) String() string            { return proto.CompactTextString(m) }
func (*C2RQueryRankReq) ProtoMessage()               {}
func (*C2RQueryRankReq) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{7} }

type R2CQueryRankAck struct {
	Tid        uint32      `protobuf:"varint,1,opt,name=tid" json:"tid,omitempty"`
	PlayerId   uint64      `protobuf:"varint,2,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	RankList   []*RankItem `protobuf:"bytes,3,rep,name=rank_list,json=rankList" json:"rank_list,omitempty"`
	PlayerRank *RankItem   `protobuf:"bytes,4,opt,name=player_rank,json=playerRank" json:"player_rank,omitempty"`
	Errorcode  uint32      `protobuf:"varint,5,opt,name=errorcode" json:"errorcode,omitempty"`
}

func (m *R2CQueryRankAck) Reset()                    { *m = R2CQueryRankAck{} }
func (m *R2CQueryRankAck) String() string            { return proto.CompactTextString(m) }
func (*R2CQueryRankAck) ProtoMessage()               {}
func (*R2CQueryRankAck) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{8} }

func (m *R2CQueryRankAck) GetRankList() []*RankItem {
	if m != nil {
		return m.RankList
	}
	return nil
}

func (m *R2CQueryRankAck) GetPlayerRank() *RankItem {
	if m != nil {
		return m.PlayerRank
	}
	return nil
}

type C2RClearAllReq struct {
}

func (m *C2RClearAllReq) Reset()                    { *m = C2RClearAllReq{} }
func (m *C2RClearAllReq) String() string            { return proto.CompactTextString(m) }
func (*C2RClearAllReq) ProtoMessage()               {}
func (*C2RClearAllReq) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{9} }

type R2CClearAllAck struct {
	Tid       uint32 `protobuf:"varint,1,opt,name=tid" json:"tid,omitempty"`
	Errorcode uint32 `protobuf:"varint,2,opt,name=errorcode" json:"errorcode,omitempty"`
}

func (m *R2CClearAllAck) Reset()                    { *m = R2CClearAllAck{} }
func (m *R2CClearAllAck) String() string            { return proto.CompactTextString(m) }
func (*R2CClearAllAck) ProtoMessage()               {}
func (*R2CClearAllAck) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{10} }

type C2RClearPlayerReq struct {
	PlayerId uint64 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
}

func (m *C2RClearPlayerReq) Reset()                    { *m = C2RClearPlayerReq{} }
func (m *C2RClearPlayerReq) String() string            { return proto.CompactTextString(m) }
func (*C2RClearPlayerReq) ProtoMessage()               {}
func (*C2RClearPlayerReq) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{11} }

type R2CClearPlayerAck struct {
	Tid       uint32 `protobuf:"varint,1,opt,name=tid" json:"tid,omitempty"`
	PlayerId  uint64 `protobuf:"varint,2,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	Errorcode uint32 `protobuf:"varint,3,opt,name=errorcode" json:"errorcode,omitempty"`
}

func (m *R2CClearPlayerAck) Reset()                    { *m = R2CClearPlayerAck{} }
func (m *R2CClearPlayerAck) String() string            { return proto.CompactTextString(m) }
func (*R2CClearPlayerAck) ProtoMessage()               {}
func (*R2CClearPlayerAck) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{12} }

func init() {
	proto.RegisterType((*C2RRankVerifyReq)(nil), "pb.c2r_rank_verify_req")
	proto.RegisterType((*R2CRankVerifyAck)(nil), "pb.r2c_rank_verify_ack")
	proto.RegisterType((*C2RTranferMsg)(nil), "pb.c2r_tranfer_msg")
	proto.RegisterType((*R2CTranferMsg)(nil), "pb.r2c_tranfer_msg")
	proto.RegisterType((*RankItem)(nil), "pb.rank_item")
	proto.RegisterType((*C2RUpdateRankReq)(nil), "pb.c2r_update_rank_req")
	proto.RegisterType((*R2CUpdateRankAck)(nil), "pb.r2c_update_rank_ack")
	proto.RegisterType((*C2RQueryRankReq)(nil), "pb.c2r_query_rank_req")
	proto.RegisterType((*R2CQueryRankAck)(nil), "pb.r2c_query_rank_ack")
	proto.RegisterType((*C2RClearAllReq)(nil), "pb.c2r_clear_all_req")
	proto.RegisterType((*R2CClearAllAck)(nil), "pb.r2c_clear_all_ack")
	proto.RegisterType((*C2RClearPlayerReq)(nil), "pb.c2r_clear_player_req")
	proto.RegisterType((*R2CClearPlayerAck)(nil), "pb.r2c_clear_player_ack")
	proto.RegisterEnum("pb.CRLogicMsgId", CRLogicMsgId_name, CRLogicMsgId_value)
}

var fileDescriptor7 = []byte{
	// 614 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x55, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x26, 0x76, 0x92, 0x26, 0x93, 0x44, 0xb4, 0x9b, 0xb4, 0x98, 0x1f, 0x09, 0x30, 0x17, 0xd4,
	0x43, 0x24, 0x92, 0xf6, 0xc2, 0x0d, 0x15, 0x90, 0x2a, 0x95, 0x8b, 0xc5, 0xdd, 0xda, 0x38, 0x9b,
	0x60, 0xc5, 0xb1, 0xdd, 0xf5, 0x16, 0xc8, 0x23, 0xf0, 0x50, 0xbc, 0x13, 0x6f, 0x50, 0x66, 0x76,
	0xed, 0x26, 0x76, 0x4c, 0x91, 0x90, 0xb8, 0xad, 0xbf, 0x6f, 0xf2, 0xcd, 0xcc, 0x37, 0xb3, 0x1b,
	0x38, 0x92, 0x3c, 0x5e, 0xf9, 0x41, 0x14, 0x8a, 0x58, 0x8d, 0x53, 0x99, 0xa8, 0x84, 0x59, 0xe9,
	0xcc, 0x7d, 0x0b, 0xc3, 0x60, 0x22, 0x7d, 0x4d, 0x7e, 0x15, 0x32, 0x5c, 0x6c, 0x7c, 0x29, 0xae,
	0xd9, 0x2b, 0x18, 0x2c, 0xb9, 0x12, 0xdf, 0xf8, 0xc6, 0x57, 0xc9, 0x4a, 0xc4, 0x4e, 0xe3, 0x45,
	0xe3, 0x75, 0xd7, 0xeb, 0xe7, 0xe0, 0x67, 0xc2, 0xdc, 0x63, 0x18, 0xca, 0x49, 0x50, 0xfa, 0x2d,
	0x0f, 0x56, 0x6e, 0x00, 0x0f, 0x49, 0x52, 0x21, 0xbe, 0x10, 0xd2, 0x5f, 0x67, 0x4b, 0x76, 0x08,
	0xb6, 0x0a, 0xe7, 0x5a, 0x64, 0xe0, 0xd1, 0x91, 0x8d, 0xa0, 0x85, 0x04, 0x62, 0x96, 0xc6, 0xcc,
	0x07, 0xa1, 0x73, 0xae, 0x78, 0xe6, 0xd8, 0x88, 0xf6, 0x3d, 0xf3, 0xc1, 0x18, 0x34, 0x83, 0x19,
	0x86, 0x36, 0x11, 0x6c, 0x7a, 0xfa, 0x4c, 0x49, 0x28, 0xf7, 0xff, 0x4d, 0xf2, 0xab, 0x01, 0x5d,
	0xdd, 0x5d, 0xa8, 0xc4, 0x9a, 0x3d, 0x85, 0x6e, 0x1a, 0xf1, 0x0d, 0x66, 0xcb, 0xb3, 0x34, 0xbd,
	0x8e, 0x01, 0x2e, 0xe7, 0xec, 0x25, 0xf4, 0xb9, 0x52, 0x3c, 0xf8, 0xe2, 0x1b, 0x6d, 0x4b, 0x6b,
	0xf7, 0x0c, 0xf6, 0x5e, 0x67, 0x78, 0x0e, 0xbd, 0x2c, 0x91, 0xca, 0x5f, 0x84, 0x22, 0x9a, 0xbf,
	0xd1, 0xd9, 0x6d, 0x0f, 0x08, 0xfa, 0xa8, 0x91, 0x72, 0xc0, 0x44, 0x57, 0xb2, 0x1b, 0x30, 0x29,
	0x07, 0x4c, 0x9d, 0x56, 0x25, 0x60, 0x5a, 0x0e, 0x38, 0x73, 0xda, 0x95, 0x80, 0xb3, 0x72, 0xc0,
	0xb9, 0x73, 0x50, 0x09, 0x38, 0x77, 0xdf, 0x99, 0x7d, 0xb8, 0x49, 0xb1, 0x0d, 0x61, 0x46, 0x4b,
	0xfb, 0x70, 0x5a, 0x18, 0x11, 0x2f, 0x12, 0xdd, 0x7b, 0x6f, 0x32, 0x18, 0xa7, 0xb3, 0xf1, 0x9d,
	0x3b, 0x5e, 0x87, 0x8e, 0x97, 0x48, 0xbb, 0xdc, 0xac, 0xc5, 0xae, 0x04, 0xae, 0x45, 0xcd, 0x78,
	0x9e, 0x40, 0xee, 0x5f, 0x3e, 0xa1, 0x3b, 0x3f, 0x91, 0x7b, 0x06, 0x5d, 0x21, 0x65, 0x22, 0x83,
	0x64, 0x2e, 0xb4, 0x55, 0x03, 0x6f, 0x0b, 0xb8, 0x1f, 0x80, 0x51, 0x95, 0xd7, 0x37, 0x42, 0x6e,
	0xb6, 0x45, 0xde, 0x3b, 0x20, 0x9c, 0xaf, 0x4a, 0xd2, 0x38, 0x5f, 0x05, 0x7d, 0x76, 0x7f, 0x36,
	0x80, 0x51, 0xa9, 0x3b, 0x3a, 0xf5, 0x95, 0x96, 0x94, 0xad, 0x8a, 0x72, 0xe1, 0x4d, 0x14, 0x66,
	0x0a, 0x4b, 0xb5, 0xff, 0xe0, 0xcd, 0x15, 0xd2, 0x6c, 0x0c, 0xbd, 0x5c, 0x88, 0x20, 0x3d, 0xe2,
	0xbd, 0x68, 0x30, 0x11, 0x1e, 0x02, 0x65, 0x1b, 0x5a, 0x55, 0x1b, 0x86, 0x70, 0x44, 0x36, 0x04,
	0x91, 0xe0, 0xd2, 0xe7, 0x51, 0x44, 0x2e, 0xb8, 0x17, 0x78, 0xd5, 0xb1, 0xa7, 0x2d, 0x58, 0xdf,
	0x52, 0x49, 0xd9, 0xaa, 0x2a, 0x4f, 0x61, 0xb4, 0x55, 0x2e, 0x2a, 0xfe, 0x8b, 0xc5, 0x78, 0x27,
	0x47, 0xdb, 0xcc, 0x79, 0xd8, 0x3f, 0xf8, 0x79, 0xef, 0xe8, 0x4f, 0x7f, 0xd8, 0xd0, 0xbf, 0xf0,
	0xae, 0x92, 0x65, 0x18, 0x7c, 0xca, 0x96, 0x18, 0xee, 0x98, 0x52, 0x23, 0x42, 0xfc, 0x75, 0x18,
	0xd3, 0x5b, 0x80, 0xb2, 0x87, 0x0f, 0x70, 0xbf, 0x4e, 0x6a, 0xde, 0x36, 0xe2, 0x1a, 0xc4, 0xd5,
	0xbc, 0x5d, 0xc4, 0x59, 0xec, 0xc4, 0x6c, 0xd7, 0xce, 0xdb, 0x42, 0xb8, 0x4d, 0x78, 0xe5, 0xcd,
	0x21, 0xbc, 0x59, 0xe4, 0xa9, 0xdc, 0x19, 0xe2, 0x5a, 0x45, 0x9e, 0xca, 0x65, 0x20, 0xae, 0xcd,
	0x1e, 0xc3, 0xf1, 0xfe, 0x16, 0x13, 0x75, 0x40, 0xd4, 0xfe, 0x62, 0x12, 0xd5, 0x29, 0xfa, 0x2d,
	0x0d, 0x9d, 0x98, 0x2e, 0x31, 0x7b, 0x93, 0x27, 0x06, 0xd0, 0xef, 0x47, 0x75, 0xe3, 0x24, 0xb2,
	0x47, 0x64, 0xdd, 0xd8, 0x88, 0xec, 0x23, 0x89, 0x35, 0xaa, 0xac, 0xb0, 0x97, 0x7f, 0x2f, 0xda,
	0xbe, 0xbd, 0xb5, 0x67, 0x6d, 0xfd, 0x3f, 0x32, 0xfd, 0x1d, 0x00, 0x00, 0xff, 0xff, 0xf2, 0x62,
	0x28, 0x80, 0x5c, 0x06, 0x00, 0x00,
}
