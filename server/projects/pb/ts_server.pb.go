// Code generated by protoc-gen-go.
// source: ts_server.proto
// DO NOT EDIT!

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type TS2TSLogicMsgId int32

const (
	TS2TSLogicMsgId_ts2ts_logic_min_msg_id    TS2TSLogicMsgId = 0
	TS2TSLogicMsgId_ts2ts_gateway_info_ntf_id TS2TSLogicMsgId = 1
	TS2TSLogicMsgId_ts2ts_gr_tranfer_msg_id   TS2TSLogicMsgId = 2
	TS2TSLogicMsgId_ts2ts_rg_tranfer_msg_id   TS2TSLogicMsgId = 3
	TS2TSLogicMsgId_ts2ts_logic_max_msg_id    TS2TSLogicMsgId = 65535
)

var TS2TSLogicMsgId_name = map[int32]string{
	0:     "ts2ts_logic_min_msg_id",
	1:     "ts2ts_gateway_info_ntf_id",
	2:     "ts2ts_gr_tranfer_msg_id",
	3:     "ts2ts_rg_tranfer_msg_id",
	65535: "ts2ts_logic_max_msg_id",
}
var TS2TSLogicMsgId_value = map[string]int32{
	"ts2ts_logic_min_msg_id":    0,
	"ts2ts_gateway_info_ntf_id": 1,
	"ts2ts_gr_tranfer_msg_id":   2,
	"ts2ts_rg_tranfer_msg_id":   3,
	"ts2ts_logic_max_msg_id":    65535,
}

func (x TS2TSLogicMsgId) String() string {
	return proto.EnumName(TS2TSLogicMsgId_name, int32(x))
}
func (TS2TSLogicMsgId) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

type Ts2TsGatewayInfoNtf struct {
	RemoteAddr      string `protobuf:"bytes,1,opt,name=remote_addr,json=remoteAddr" json:"remote_addr,omitempty"`
	ClientConnCount uint32 `protobuf:"varint,2,opt,name=client_conn_count,json=clientConnCount" json:"client_conn_count,omitempty"`
	Token           string `protobuf:"bytes,3,opt,name=token" json:"token,omitempty"`
}

func (m *Ts2TsGatewayInfoNtf) Reset()                    { *m = Ts2TsGatewayInfoNtf{} }
func (m *Ts2TsGatewayInfoNtf) String() string            { return proto.CompactTextString(m) }
func (*Ts2TsGatewayInfoNtf) ProtoMessage()               {}
func (*Ts2TsGatewayInfoNtf) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

type Ts2TsGrTranferMsg struct {
	RankclientSessid uint64 `protobuf:"varint,1,opt,name=rankclient_sessid,json=rankclientSessid" json:"rankclient_sessid,omitempty"`
	Msgid            uint32 `protobuf:"varint,2,opt,name=msgid" json:"msgid,omitempty"`
	Datas            []byte `protobuf:"bytes,3,opt,name=datas,proto3" json:"datas,omitempty"`
	Tid              uint32 `protobuf:"varint,4,opt,name=tid" json:"tid,omitempty"`
	Cbid             uint64 `protobuf:"varint,5,opt,name=cbid" json:"cbid,omitempty"`
}

func (m *Ts2TsGrTranferMsg) Reset()                    { *m = Ts2TsGrTranferMsg{} }
func (m *Ts2TsGrTranferMsg) String() string            { return proto.CompactTextString(m) }
func (*Ts2TsGrTranferMsg) ProtoMessage()               {}
func (*Ts2TsGrTranferMsg) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{1} }

type Ts2TsRgTranferMsg struct {
	RankclientSessid uint64 `protobuf:"varint,1,opt,name=rankclient_sessid,json=rankclientSessid" json:"rankclient_sessid,omitempty"`
	Msgid            uint32 `protobuf:"varint,2,opt,name=msgid" json:"msgid,omitempty"`
	Datas            []byte `protobuf:"bytes,3,opt,name=datas,proto3" json:"datas,omitempty"`
	Tid              uint32 `protobuf:"varint,4,opt,name=tid" json:"tid,omitempty"`
	Cbid             uint64 `protobuf:"varint,5,opt,name=cbid" json:"cbid,omitempty"`
}

func (m *Ts2TsRgTranferMsg) Reset()                    { *m = Ts2TsRgTranferMsg{} }
func (m *Ts2TsRgTranferMsg) String() string            { return proto.CompactTextString(m) }
func (*Ts2TsRgTranferMsg) ProtoMessage()               {}
func (*Ts2TsRgTranferMsg) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{2} }

func init() {
	proto.RegisterType((*Ts2TsGatewayInfoNtf)(nil), "pb.ts2ts_gateway_info_ntf")
	proto.RegisterType((*Ts2TsGrTranferMsg)(nil), "pb.ts2ts_gr_tranfer_msg")
	proto.RegisterType((*Ts2TsRgTranferMsg)(nil), "pb.ts2ts_rg_tranfer_msg")
	proto.RegisterEnum("pb.TS2TSLogicMsgId", TS2TSLogicMsgId_name, TS2TSLogicMsgId_value)
}

var fileDescriptor8 = []byte{
	// 324 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xcc, 0x92, 0xdd, 0x4e, 0x3a, 0x31,
	0x10, 0xc5, 0xff, 0xcb, 0xc2, 0x3f, 0x71, 0xd4, 0x00, 0x13, 0xa2, 0x88, 0x1a, 0x0d, 0x57, 0x06,
	0x13, 0x2f, 0xf0, 0x09, 0x0c, 0x57, 0x26, 0x7a, 0xb3, 0x70, 0xdf, 0x94, 0xdd, 0xb2, 0x69, 0x60,
	0x5b, 0xd2, 0x8e, 0x5f, 0xf1, 0x39, 0x7c, 0x03, 0xdf, 0x13, 0xfb, 0x01, 0x41, 0x0d, 0x0f, 0xe0,
	0xcd, 0xa6, 0xf3, 0x3b, 0xb3, 0x67, 0x4e, 0x3a, 0x85, 0x26, 0x59, 0x66, 0x85, 0x79, 0x16, 0xe6,
	0x66, 0x69, 0x34, 0x69, 0xac, 0x2d, 0xa7, 0x3d, 0x0f, 0x73, 0x5d, 0x55, 0x5a, 0x45, 0xd8, 0x7f,
	0x87, 0x23, 0xb2, 0x43, 0x47, 0x4b, 0x4e, 0xe2, 0x85, 0xbf, 0x31, 0xa9, 0x66, 0x9a, 0x29, 0x9a,
	0xe1, 0x05, 0xec, 0x1b, 0x51, 0x69, 0x12, 0x8c, 0x17, 0x85, 0xe9, 0x26, 0x97, 0xc9, 0xd5, 0x5e,
	0x06, 0x11, 0xdd, 0x39, 0x82, 0x03, 0x68, 0xe7, 0x0b, 0x29, 0x14, 0x39, 0x47, 0xa5, 0xdc, 0xe7,
	0x49, 0x51, 0xb7, 0xe6, 0xda, 0x0e, 0xb3, 0x66, 0x14, 0x46, 0x8e, 0x8f, 0x3c, 0xc6, 0x0e, 0x34,
	0x48, 0xcf, 0x85, 0xea, 0xa6, 0xc1, 0x26, 0x16, 0xfd, 0x8f, 0x04, 0x3a, 0xeb, 0xe9, 0x86, 0x91,
	0xe1, 0x6a, 0x26, 0x0c, 0xab, 0x6c, 0x89, 0xd7, 0xd0, 0x76, 0xd5, 0x7c, 0x6d, 0x6f, 0x85, 0xb5,
	0xb2, 0x08, 0x09, 0xea, 0x59, 0x6b, 0x2b, 0x8c, 0x03, 0xf7, 0xde, 0xee, 0x1f, 0xd7, 0x10, 0x67,
	0xc7, 0xc2, 0xd3, 0x82, 0x13, 0xb7, 0x61, 0xe2, 0x41, 0x16, 0x0b, 0x6c, 0x41, 0x4a, 0xae, 0xb3,
	0x1e, 0x3a, 0xfd, 0x11, 0x11, 0xea, 0xf9, 0xd4, 0xa1, 0x46, 0x70, 0x0f, 0xe7, 0x6f, 0xb9, 0x4c,
	0xf9, 0x87, 0x72, 0x0d, 0x3e, 0x13, 0x68, 0x4e, 0xc6, 0xc3, 0xc9, 0xf8, 0x41, 0x97, 0x32, 0x7f,
	0xb4, 0xe5, 0x7d, 0x81, 0xbd, 0xcd, 0x02, 0x17, 0x9e, 0xb1, 0x4a, 0x2a, 0x9f, 0x94, 0xc9, 0xa2,
	0xf5, 0x0f, 0xcf, 0xe1, 0x64, 0xf7, 0x72, 0xbd, 0x9c, 0xe0, 0x29, 0x1c, 0xef, 0xba, 0x7d, 0x2f,
	0xd6, 0xb6, 0xe2, 0xcf, 0x2b, 0xf0, 0x62, 0x8a, 0x67, 0xbf, 0x86, 0xf2, 0xd7, 0x8d, 0xb6, 0x5a,
	0xa5, 0xd3, 0xff, 0xe1, 0x69, 0xdd, 0x7e, 0x05, 0x00, 0x00, 0xff, 0xff, 0xc0, 0x21, 0xf9, 0x64,
	0x82, 0x02, 0x00, 0x00,
}
