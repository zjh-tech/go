// Code generated by protoc-gen-go.
// source: cs_login_sys.proto
// DO NOT EDIT!

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CsAccountRegisterReq struct {
	AccountName string `protobuf:"bytes,1,opt,name=account_name,json=accountName" json:"account_name,omitempty"`
	Password    string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *CsAccountRegisterReq) Reset()                    { *m = CsAccountRegisterReq{} }
func (m *CsAccountRegisterReq) String() string            { return proto.CompactTextString(m) }
func (*CsAccountRegisterReq) ProtoMessage()               {}
func (*CsAccountRegisterReq) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

type ScAccountRegisterAck struct {
	AccountName string `protobuf:"bytes,1,opt,name=account_name,json=accountName" json:"account_name,omitempty"`
	ErrorCode   uint32 `protobuf:"varint,2,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
}

func (m *ScAccountRegisterAck) Reset()                    { *m = ScAccountRegisterAck{} }
func (m *ScAccountRegisterAck) String() string            { return proto.CompactTextString(m) }
func (*ScAccountRegisterAck) ProtoMessage()               {}
func (*ScAccountRegisterAck) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

type CsAccountLoginReq struct {
	AccountName string `protobuf:"bytes,1,opt,name=account_name,json=accountName" json:"account_name,omitempty"`
	Password    string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *CsAccountLoginReq) Reset()                    { *m = CsAccountLoginReq{} }
func (m *CsAccountLoginReq) String() string            { return proto.CompactTextString(m) }
func (*CsAccountLoginReq) ProtoMessage()               {}
func (*CsAccountLoginReq) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

type ScAccountLoginAck struct {
	AccountName   string `protobuf:"bytes,1,opt,name=account_name,json=accountName" json:"account_name,omitempty"`
	ErrorCode     uint32 `protobuf:"varint,2,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	Accountid     uint64 `protobuf:"varint,3,opt,name=accountid" json:"accountid,omitempty"`
	LoginServerId uint64 `protobuf:"varint,4,opt,name=login_server_id,json=loginServerId" json:"login_server_id,omitempty"`
	Token         []byte `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
	GatewayIp     string `protobuf:"bytes,6,opt,name=gateway_ip,json=gatewayIp" json:"gateway_ip,omitempty"`
	GatewayPort   uint32 `protobuf:"varint,7,opt,name=gateway_port,json=gatewayPort" json:"gateway_port,omitempty"`
}

func (m *ScAccountLoginAck) Reset()                    { *m = ScAccountLoginAck{} }
func (m *ScAccountLoginAck) String() string            { return proto.CompactTextString(m) }
func (*ScAccountLoginAck) ProtoMessage()               {}
func (*ScAccountLoginAck) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

type CsGameLoginReq struct {
	Accountid     uint64 `protobuf:"varint,1,opt,name=accountid" json:"accountid,omitempty"`
	Token         []byte `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Loginserverid uint64 `protobuf:"varint,3,opt,name=loginserverid" json:"loginserverid,omitempty"`
}

func (m *CsGameLoginReq) Reset()                    { *m = CsGameLoginReq{} }
func (m *CsGameLoginReq) String() string            { return proto.CompactTextString(m) }
func (*CsGameLoginReq) ProtoMessage()               {}
func (*CsGameLoginReq) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

type PlayerBaseInfo struct {
	Playerid   uint64 `protobuf:"varint,1,opt,name=playerid" json:"playerid,omitempty"`
	Playername string `protobuf:"bytes,2,opt,name=playername" json:"playername,omitempty"`
}

func (m *PlayerBaseInfo) Reset()                    { *m = PlayerBaseInfo{} }
func (m *PlayerBaseInfo) String() string            { return proto.CompactTextString(m) }
func (*PlayerBaseInfo) ProtoMessage()               {}
func (*PlayerBaseInfo) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

type ScGameLoginAck struct {
	Accountid    uint64            `protobuf:"varint,1,opt,name=accountid" json:"accountid,omitempty"`
	Errorcode    uint32            `protobuf:"varint,2,opt,name=errorcode" json:"errorcode,omitempty"`
	Baseinfolist []*PlayerBaseInfo `protobuf:"bytes,3,rep,name=baseinfolist" json:"baseinfolist,omitempty"`
}

func (m *ScGameLoginAck) Reset()                    { *m = ScGameLoginAck{} }
func (m *ScGameLoginAck) String() string            { return proto.CompactTextString(m) }
func (*ScGameLoginAck) ProtoMessage()               {}
func (*ScGameLoginAck) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *ScGameLoginAck) GetBaseinfolist() []*PlayerBaseInfo {
	if m != nil {
		return m.Baseinfolist
	}
	return nil
}

type CsCreatePlayerReq struct {
	Playername string `protobuf:"bytes,1,opt,name=playername" json:"playername,omitempty"`
}

func (m *CsCreatePlayerReq) Reset()                    { *m = CsCreatePlayerReq{} }
func (m *CsCreatePlayerReq) String() string            { return proto.CompactTextString(m) }
func (*CsCreatePlayerReq) ProtoMessage()               {}
func (*CsCreatePlayerReq) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

type ScCreatePlayerAck struct {
	Playername   string            `protobuf:"bytes,1,opt,name=playername" json:"playername,omitempty"`
	Errorcode    uint32            `protobuf:"varint,2,opt,name=errorcode" json:"errorcode,omitempty"`
	Baseinfolist []*PlayerBaseInfo `protobuf:"bytes,3,rep,name=baseinfolist" json:"baseinfolist,omitempty"`
	Lastplayerid uint64            `protobuf:"varint,4,opt,name=lastplayerid" json:"lastplayerid,omitempty"`
}

func (m *ScCreatePlayerAck) Reset()                    { *m = ScCreatePlayerAck{} }
func (m *ScCreatePlayerAck) String() string            { return proto.CompactTextString(m) }
func (*ScCreatePlayerAck) ProtoMessage()               {}
func (*ScCreatePlayerAck) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

func (m *ScCreatePlayerAck) GetBaseinfolist() []*PlayerBaseInfo {
	if m != nil {
		return m.Baseinfolist
	}
	return nil
}

type CsSelectPlayerReq struct {
	Playerid uint64 `protobuf:"varint,1,opt,name=playerid" json:"playerid,omitempty"`
}

func (m *CsSelectPlayerReq) Reset()                    { *m = CsSelectPlayerReq{} }
func (m *CsSelectPlayerReq) String() string            { return proto.CompactTextString(m) }
func (*CsSelectPlayerReq) ProtoMessage()               {}
func (*CsSelectPlayerReq) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

type ScSelectPlayerAck struct {
	Playerid uint64 `protobuf:"varint,1,opt,name=playerid" json:"playerid,omitempty"`
}

func (m *ScSelectPlayerAck) Reset()                    { *m = ScSelectPlayerAck{} }
func (m *ScSelectPlayerAck) String() string            { return proto.CompactTextString(m) }
func (*ScSelectPlayerAck) ProtoMessage()               {}
func (*ScSelectPlayerAck) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{10} }

type CsReconnectGameReq struct {
	Accountid   uint64 `protobuf:"varint,1,opt,name=accountid" json:"accountid,omitempty"`
	Oldtoken    []byte `protobuf:"bytes,2,opt,name=oldtoken,proto3" json:"oldtoken,omitempty"`
	Randomvalue string `protobuf:"bytes,3,opt,name=randomvalue" json:"randomvalue,omitempty"`
	Newtoken    []byte `protobuf:"bytes,4,opt,name=newtoken,proto3" json:"newtoken,omitempty"`
}

func (m *CsReconnectGameReq) Reset()                    { *m = CsReconnectGameReq{} }
func (m *CsReconnectGameReq) String() string            { return proto.CompactTextString(m) }
func (*CsReconnectGameReq) ProtoMessage()               {}
func (*CsReconnectGameReq) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{11} }

type ScReconnectGameAck struct {
	Errorcode uint32 `protobuf:"varint,1,opt,name=errorcode" json:"errorcode,omitempty"`
}

func (m *ScReconnectGameAck) Reset()                    { *m = ScReconnectGameAck{} }
func (m *ScReconnectGameAck) String() string            { return proto.CompactTextString(m) }
func (*ScReconnectGameAck) ProtoMessage()               {}
func (*ScReconnectGameAck) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{12} }

type CsExitGameReq struct {
}

func (m *CsExitGameReq) Reset()                    { *m = CsExitGameReq{} }
func (m *CsExitGameReq) String() string            { return proto.CompactTextString(m) }
func (*CsExitGameReq) ProtoMessage()               {}
func (*CsExitGameReq) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{13} }

func init() {
	proto.RegisterType((*CsAccountRegisterReq)(nil), "pb.cs_account_register_req")
	proto.RegisterType((*ScAccountRegisterAck)(nil), "pb.sc_account_register_ack")
	proto.RegisterType((*CsAccountLoginReq)(nil), "pb.cs_account_login_req")
	proto.RegisterType((*ScAccountLoginAck)(nil), "pb.sc_account_login_ack")
	proto.RegisterType((*CsGameLoginReq)(nil), "pb.cs_game_login_req")
	proto.RegisterType((*PlayerBaseInfo)(nil), "pb.player_base_info")
	proto.RegisterType((*ScGameLoginAck)(nil), "pb.sc_game_login_ack")
	proto.RegisterType((*CsCreatePlayerReq)(nil), "pb.cs_create_player_req")
	proto.RegisterType((*ScCreatePlayerAck)(nil), "pb.sc_create_player_ack")
	proto.RegisterType((*CsSelectPlayerReq)(nil), "pb.cs_select_player_req")
	proto.RegisterType((*ScSelectPlayerAck)(nil), "pb.sc_select_player_ack")
	proto.RegisterType((*CsReconnectGameReq)(nil), "pb.cs_reconnect_game_req")
	proto.RegisterType((*ScReconnectGameAck)(nil), "pb.sc_reconnect_game_ack")
	proto.RegisterType((*CsExitGameReq)(nil), "pb.cs_exit_game_req")
}

var fileDescriptor2 = []byte{
	// 533 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x94, 0x41, 0x6f, 0xd3, 0x30,
	0x14, 0xc7, 0x95, 0xae, 0x1b, 0xf4, 0xb5, 0xd3, 0x36, 0xab, 0xd3, 0xa2, 0x09, 0xd0, 0xb0, 0x10,
	0xda, 0xa9, 0x87, 0x21, 0x10, 0x77, 0x4e, 0xbb, 0x4c, 0x28, 0x08, 0x09, 0x89, 0x43, 0xe4, 0x3a,
	0xa6, 0x8a, 0x96, 0xd8, 0xc1, 0xce, 0x56, 0xfa, 0x11, 0x38, 0xf1, 0x5d, 0xf8, 0x70, 0x9c, 0x79,
	0xb6, 0xd3, 0xd4, 0x49, 0xa5, 0x8e, 0xc3, 0xb8, 0xc5, 0x3f, 0xfb, 0xd9, 0xff, 0xff, 0xfb, 0xbf,
	0x16, 0x08, 0x37, 0x69, 0xa1, 0x16, 0xb9, 0x4c, 0xcd, 0xca, 0xcc, 0x2a, 0xad, 0x6a, 0x45, 0x06,
	0xd5, 0xfc, 0xfc, 0x08, 0x39, 0x57, 0x65, 0xa9, 0xa4, 0x87, 0xf4, 0x0b, 0x9c, 0x21, 0x62, 0x9c,
	0xab, 0x3b, 0x59, 0xa7, 0x5a, 0x2c, 0x72, 0x53, 0x0b, 0x8d, 0x1f, 0xdf, 0xc9, 0x4b, 0x98, 0xac,
	0xb9, 0x64, 0xa5, 0x88, 0xa3, 0x8b, 0xe8, 0x72, 0x94, 0x8c, 0x1b, 0x76, 0x83, 0x88, 0x9c, 0xc3,
	0xd3, 0x8a, 0x19, 0xb3, 0x54, 0x3a, 0x8b, 0x07, 0x6e, 0xbb, 0x5d, 0xd3, 0xaf, 0x70, 0x66, 0xf8,
	0xf6, 0xcd, 0x8c, 0xdf, 0xfe, 0xcb, 0xcd, 0xcf, 0x01, 0x84, 0xd6, 0x4a, 0xa3, 0xda, 0x4c, 0xb8,
	0xbb, 0x0f, 0x93, 0x91, 0x23, 0x1f, 0x10, 0xd0, 0xcf, 0x30, 0x0d, 0x64, 0x7b, 0xa7, 0x8f, 0xa0,
	0xf9, 0x4f, 0x04, 0xd3, 0x40, 0xb4, 0xbf, 0xf7, 0x51, 0x14, 0x93, 0x67, 0x30, 0x6a, 0x4e, 0xe7,
	0x59, 0xbc, 0x87, 0xbb, 0xc3, 0x64, 0x03, 0xc8, 0x6b, 0x38, 0x6a, 0xe2, 0x12, 0xfa, 0x1e, 0xbb,
	0x84, 0x67, 0x86, 0xee, 0xcc, 0xa1, 0xc3, 0x9f, 0x1c, 0xbd, 0xce, 0xc8, 0x14, 0xf6, 0x6b, 0x75,
	0x2b, 0x64, 0xbc, 0x8f, 0xbb, 0x93, 0xc4, 0x2f, 0xec, 0xd3, 0x0b, 0x56, 0x8b, 0x25, 0x5b, 0xa5,
	0x79, 0x15, 0x1f, 0x38, 0x6d, 0xa3, 0x86, 0x5c, 0x57, 0x56, 0xfc, 0x7a, 0xbb, 0x52, 0xba, 0x8e,
	0x9f, 0x38, 0x6d, 0xe3, 0x86, 0x7d, 0x44, 0x44, 0x4b, 0x38, 0xc1, 0x7e, 0x2e, 0xd0, 0x47, 0xd0,
	0xcc, 0x8e, 0xe4, 0xa8, 0x2f, 0xb9, 0x95, 0x32, 0x08, 0xa5, 0xbc, 0x02, 0xaf, 0xd8, 0xfb, 0x68,
	0xad, 0x76, 0x21, 0xbd, 0x81, 0xe3, 0xaa, 0x60, 0x2b, 0x34, 0x3a, 0x67, 0x46, 0xa4, 0xb9, 0xfc,
	0xa6, 0x5c, 0x2e, 0x8e, 0xb5, 0x8f, 0xb5, 0x6b, 0xf2, 0x02, 0xc0, 0x7f, 0xbb, 0xe6, 0xfb, 0xd4,
	0x02, 0x42, 0x7f, 0x46, 0x70, 0x82, 0xb9, 0x05, 0xfa, 0x6d, 0x68, 0xbb, 0xf5, 0xe3, 0xae, 0x4b,
	0x67, 0x2b, 0x2e, 0x0b, 0xc8, 0x7b, 0x98, 0x58, 0x69, 0x56, 0x59, 0x81, 0x83, 0x8b, 0x36, 0xf6,
	0x2e, 0xc7, 0x57, 0xd3, 0x59, 0x35, 0x9f, 0xf5, 0x95, 0x27, 0x9d, 0x93, 0xf4, 0x9d, 0x1b, 0x4d,
	0xae, 0x05, 0xb6, 0x37, 0x6d, 0xce, 0xda, 0x6e, 0x76, 0x3d, 0x44, 0x5b, 0x1e, 0x7e, 0xfb, 0xd9,
	0xeb, 0x16, 0x5a, 0x1b, 0x0f, 0x14, 0xfe, 0x2f, 0x23, 0x84, 0xc2, 0xa4, 0x60, 0xa6, 0x6e, 0x43,
	0xf1, 0x03, 0xd9, 0x61, 0xf4, 0xca, 0x99, 0x35, 0xa2, 0x10, 0xbc, 0x0e, 0xcd, 0xee, 0x08, 0xd3,
	0xd6, 0xa0, 0xcf, 0x6e, 0x8d, 0xf5, 0xb9, 0xab, 0xe6, 0x57, 0x04, 0xa7, 0xf8, 0x90, 0x16, 0x5c,
	0x49, 0x69, 0xeb, 0x5c, 0xd4, 0x0f, 0x0f, 0x29, 0xde, 0xa9, 0x8a, 0x2c, 0x9c, 0xd3, 0x76, 0x4d,
	0x2e, 0x60, 0xac, 0x99, 0xcc, 0x54, 0x79, 0xcf, 0x8a, 0x3b, 0xe1, 0x06, 0x15, 0x7f, 0xd2, 0x01,
	0xb2, 0xd5, 0x52, 0x2c, 0x7d, 0xf5, 0xd0, 0x57, 0xaf, 0xd7, 0xf4, 0x2d, 0x9c, 0xa2, 0x8b, 0x9e,
	0xa0, 0x66, 0xea, 0x36, 0x71, 0x44, 0xbd, 0x38, 0x28, 0x81, 0x63, 0xf4, 0x21, 0x7e, 0xe4, 0x1b,
	0x0b, 0xf3, 0x03, 0xf7, 0x57, 0xfc, 0xe6, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8e, 0x4c, 0x50,
	0x9a, 0xb5, 0x05, 0x00, 0x00,
}
