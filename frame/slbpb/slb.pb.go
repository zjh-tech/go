// Code generated by protoc-gen-go.
// source: slb.proto
// DO NOT EDIT!

/*
Package slbpb is a generated protocol buffer package.

It is generated from these files:
	slb.proto

It has these top-level messages:
	SdServerSpec
	S2LbServiceDiscoveryReq
	Lb2SServiceDiscoveryAck
	S2LbSelectMinServerReq
	Lb2SSelectMinServerAck
*/
package slbpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type S2LBMsgID int32

const (
	S2LBMsgID_s2lb_invalid_msg_id           S2LBMsgID = 0
	S2LBMsgID_s2lb_service_discovery_req_id S2LBMsgID = 1
	S2LBMsgID_lb2s_service_discovery_ack_id S2LBMsgID = 2
	S2LBMsgID_s2lb_select_min_server_req_id S2LBMsgID = 3
	S2LBMsgID_lb2s_select_min_server_ack_id S2LBMsgID = 4
)

var S2LBMsgID_name = map[int32]string{
	0: "s2lb_invalid_msg_id",
	1: "s2lb_service_discovery_req_id",
	2: "lb2s_service_discovery_ack_id",
	3: "s2lb_select_min_server_req_id",
	4: "lb2s_select_min_server_ack_id",
}
var S2LBMsgID_value = map[string]int32{
	"s2lb_invalid_msg_id":           0,
	"s2lb_service_discovery_req_id": 1,
	"lb2s_service_discovery_ack_id": 2,
	"s2lb_select_min_server_req_id": 3,
	"lb2s_select_min_server_ack_id": 4,
}

func (x S2LBMsgID) String() string {
	return proto.EnumName(S2LBMsgID_name, int32(x))
}
func (S2LBMsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type SdServerSpec struct {
	ServerId       uint64 `protobuf:"varint,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	ServerType     uint32 `protobuf:"varint,2,opt,name=server_type,json=serverType" json:"server_type,omitempty"`
	Token          string `protobuf:"bytes,3,opt,name=token" json:"token,omitempty"`
	S2SInterListen string `protobuf:"bytes,4,opt,name=s2s_inter_listen,json=s2sInterListen" json:"s2s_inter_listen,omitempty"`
	S2SOuterListen string `protobuf:"bytes,5,opt,name=s2s_outer_listen,json=s2sOuterListen" json:"s2s_outer_listen,omitempty"`
	State          uint32 `protobuf:"varint,6,opt,name=state" json:"state,omitempty"`
}

func (m *SdServerSpec) Reset()                    { *m = SdServerSpec{} }
func (m *SdServerSpec) String() string            { return proto.CompactTextString(m) }
func (*SdServerSpec) ProtoMessage()               {}
func (*SdServerSpec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type S2LbServiceDiscoveryReq struct {
	SdServerInfo *SdServerSpec `protobuf:"bytes,1,opt,name=sd_server_info,json=sdServerInfo" json:"sd_server_info,omitempty"`
}

func (m *S2LbServiceDiscoveryReq) Reset()                    { *m = S2LbServiceDiscoveryReq{} }
func (m *S2LbServiceDiscoveryReq) String() string            { return proto.CompactTextString(m) }
func (*S2LbServiceDiscoveryReq) ProtoMessage()               {}
func (*S2LbServiceDiscoveryReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *S2LbServiceDiscoveryReq) GetSdServerInfo() *SdServerSpec {
	if m != nil {
		return m.SdServerInfo
	}
	return nil
}

type Lb2SServiceDiscoveryAck struct {
	SdServerList []*SdServerSpec `protobuf:"bytes,1,rep,name=sd_server_list,json=sdServerList" json:"sd_server_list,omitempty"`
}

func (m *Lb2SServiceDiscoveryAck) Reset()                    { *m = Lb2SServiceDiscoveryAck{} }
func (m *Lb2SServiceDiscoveryAck) String() string            { return proto.CompactTextString(m) }
func (*Lb2SServiceDiscoveryAck) ProtoMessage()               {}
func (*Lb2SServiceDiscoveryAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Lb2SServiceDiscoveryAck) GetSdServerList() []*SdServerSpec {
	if m != nil {
		return m.SdServerList
	}
	return nil
}

type S2LbSelectMinServerReq struct {
	ServerType uint32 `protobuf:"varint,1,opt,name=server_type,json=serverType" json:"server_type,omitempty"`
}

func (m *S2LbSelectMinServerReq) Reset()                    { *m = S2LbSelectMinServerReq{} }
func (m *S2LbSelectMinServerReq) String() string            { return proto.CompactTextString(m) }
func (*S2LbSelectMinServerReq) ProtoMessage()               {}
func (*S2LbSelectMinServerReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type Lb2SSelectMinServerAck struct {
	ServerType uint32 `protobuf:"varint,1,opt,name=server_type,json=serverType" json:"server_type,omitempty"`
	Errorcode  uint32 `protobuf:"varint,2,opt,name=errorcode" json:"errorcode,omitempty"`
	ServerId   uint64 `protobuf:"varint,3,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
}

func (m *Lb2SSelectMinServerAck) Reset()                    { *m = Lb2SSelectMinServerAck{} }
func (m *Lb2SSelectMinServerAck) String() string            { return proto.CompactTextString(m) }
func (*Lb2SSelectMinServerAck) ProtoMessage()               {}
func (*Lb2SSelectMinServerAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func init() {
	proto.RegisterType((*SdServerSpec)(nil), "slbpb.sd_server_spec")
	proto.RegisterType((*S2LbServiceDiscoveryReq)(nil), "slbpb.s2lb_service_discovery_req")
	proto.RegisterType((*Lb2SServiceDiscoveryAck)(nil), "slbpb.lb2s_service_discovery_ack")
	proto.RegisterType((*S2LbSelectMinServerReq)(nil), "slbpb.s2lb_select_min_server_req")
	proto.RegisterType((*Lb2SSelectMinServerAck)(nil), "slbpb.lb2s_select_min_server_ack")
	proto.RegisterEnum("slbpb.S2LBMsgID", S2LBMsgID_name, S2LBMsgID_value)
}

var fileDescriptor0 = []byte{
	// 371 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x93, 0xcf, 0x4e, 0xf2, 0x40,
	0x14, 0xc5, 0xbf, 0x52, 0x20, 0x5f, 0x07, 0x25, 0x64, 0xd4, 0xd8, 0xf8, 0x27, 0x6a, 0x57, 0xc4,
	0x05, 0x8b, 0xba, 0x34, 0x6e, 0x8c, 0x1b, 0x12, 0x8c, 0x49, 0x71, 0xe3, 0x6a, 0x42, 0x3b, 0x23,
	0x99, 0x50, 0x3a, 0x75, 0x66, 0x20, 0xf2, 0x56, 0x3e, 0x89, 0xcf, 0xe4, 0x9d, 0xa9, 0x40, 0x8b,
	0x10, 0xdd, 0x31, 0x67, 0x7e, 0xf7, 0x70, 0xee, 0x69, 0x8b, 0x3c, 0x95, 0xc6, 0xbd, 0x5c, 0x0a,
	0x2d, 0x70, 0x03, 0x7e, 0xe6, 0x71, 0xf0, 0xe9, 0xa0, 0xb6, 0xa2, 0x44, 0x31, 0x39, 0x67, 0x92,
	0xa8, 0x9c, 0x25, 0xf8, 0x14, 0xb0, 0xe2, 0xc8, 0xa9, 0xef, 0x5c, 0x3a, 0xdd, 0x7a, 0xf4, 0xbf,
	0x10, 0xfa, 0x14, 0x5f, 0xa0, 0xd6, 0xf7, 0xa5, 0x5e, 0xe4, 0xcc, 0xaf, 0xc1, 0xf5, 0x7e, 0x84,
	0x0a, 0xe9, 0x19, 0x14, 0x7c, 0x88, 0x1a, 0x5a, 0x4c, 0x58, 0xe6, 0xbb, 0x70, 0xe5, 0x45, 0xc5,
	0x01, 0x77, 0x51, 0x47, 0x85, 0x8a, 0xf0, 0x4c, 0xc3, 0x64, 0xca, 0x95, 0x06, 0xa0, 0x6e, 0x81,
	0x36, 0xe8, 0x7d, 0x23, 0x0f, 0xac, 0xba, 0x24, 0xc5, 0xac, 0x44, 0x36, 0x56, 0xe4, 0xd3, 0x6c,
	0x4d, 0xc2, 0x3f, 0x29, 0x3d, 0xd2, 0xcc, 0x6f, 0xda, 0x10, 0xc5, 0x21, 0x78, 0x41, 0x27, 0x2a,
	0x4c, 0x63, 0xbb, 0x11, 0x4f, 0x18, 0xa1, 0x5c, 0x25, 0x02, 0xc2, 0x2d, 0x88, 0x64, 0x6f, 0xf8,
	0xb6, 0xbc, 0x2d, 0xcf, 0x5e, 0x85, 0x5d, 0xb0, 0x15, 0x1e, 0xf5, 0x6c, 0x1d, 0xbd, 0x6a, 0x15,
	0xd1, 0x9e, 0xa2, 0xc3, 0x62, 0x73, 0x40, 0x8d, 0x75, 0x1a, 0x43, 0xb6, 0x9f, 0xd6, 0xa3, 0x64,
	0x52, 0xb5, 0x36, 0xc1, 0xc1, 0xda, 0xfd, 0x83, 0xb5, 0xd9, 0x26, 0xb8, 0x5b, 0xa5, 0x4e, 0x59,
	0xa2, 0xc9, 0x94, 0x67, 0x4b, 0xd8, 0xa4, 0xde, 0x28, 0xdd, 0xd9, 0x2c, 0x3d, 0x78, 0x5f, 0x25,
	0xdb, 0x1c, 0x37, 0xc9, 0x7e, 0x1b, 0xc7, 0x67, 0xc8, 0x63, 0x52, 0x0a, 0x99, 0x08, 0xba, 0x7c,
	0xa4, 0x6b, 0xa1, 0xfa, 0x3e, 0xb8, 0xd5, 0xf7, 0xe1, 0xfa, 0xc3, 0x41, 0xde, 0x30, 0x1c, 0xdc,
	0x3f, 0xaa, 0x71, 0xff, 0x01, 0x1f, 0xa3, 0x03, 0xbb, 0x06, 0xcf, 0xe6, 0xa3, 0x94, 0x53, 0x32,
	0x55, 0x63, 0x18, 0xea, 0xfc, 0xc3, 0x57, 0xe8, 0x7c, 0xf7, 0x53, 0x31, 0x88, 0x63, 0x90, 0xdd,
	0xed, 0x1a, 0xa4, 0x56, 0x72, 0xd9, 0xd2, 0x92, 0x41, 0xdc, 0x92, 0xcb, 0x96, 0x26, 0x0c, 0x52,
	0x8f, 0x9b, 0xf6, 0x03, 0xb8, 0xf9, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x24, 0x20, 0x1a, 0x73, 0x0d,
	0x03, 0x00, 0x00,
}
